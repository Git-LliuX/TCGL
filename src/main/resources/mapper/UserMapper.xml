<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="delete_state" jdbcType="VARCHAR" property="deleteState" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_age, user_password, user_role, delete_state
  </sql>
  <sql id="Base_Column_Condition">
    <if test="id != null and id != ''">
      and id = #{userName,jdbcType=INTEGER}
    </if>
    <if test="userName != null and userName != ''">
      and user_name = #{userName,jdbcType=VARCHAR}
    </if>
    <if test="userAge != null and userAge != ''" >
      and user_age = #{userAge,jdbcType=INTEGER}
    </if>
    <if test="userPassword != null and userPassword != ''">
      and user_password = #{userPassword,jdbcType=VARCHAR}
    </if>
    <if test="userRole != null and userRole != ''">
      and user_role = #{userRole,jdbcType=VARCHAR}
    </if>
    <if test="deleteState != null and deleteState != ''">
      and delete_state = #{deleteState,jdbcType=VARCHAR}
    </if>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.User">
    insert into t_user (id, user_name, user_age, 
      user_password, user_role, delete_state
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userAge,jdbcType=INTEGER}, 
      #{userPassword,jdbcType=VARCHAR}, #{userRole,jdbcType=INTEGER}, #{deleteState,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="deleteState != null">
        delete_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="deleteState != null">
        #{deleteState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="deleteState != null">
        delete_state = #{deleteState,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=INTEGER},
      delete_state = #{deleteState,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getInfo" resultMap="BaseResultMap">
      SELECT
      <include refid="Base_Column_List" />
      FROM t_user
    <where>
      <include refid="Base_Column_Condition" />
    </where>
  </select>
<!--  更新用户信息，标记删除用户-->
  <select id="getAllUserByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    where
    user_name = #{userName,jdbcType=VARCHAR}
    and delete_state = 'N'
  </select>
  <!--  根据用户名更新用户信息-->
  <update id="updateUserInfo" parameterType="com.example.demo.entity.User">
    update t_user
    <set>
      <if test="userPassword!= null and userPassword != ''">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null and userAge != ''">
       user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="deleteState != null and deleteState != ''">
        delete_state = #{deleteState,jdbcType=VARCHAR},
      </if>
    </set>
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
</mapper>